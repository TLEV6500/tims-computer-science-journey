(()=>{var a=class{mtx;#t=0;rowNum;colNum;set maxDigits(t){this.#t=t}get maxDigits(){return this.#t}constructor(t=1,r=1){if(typeof t=="string"&&typeof r=="object"){r.matrixSize.max<=r.matrixSize.min?this.rowNum=this.colNum=r.matrixSize.min:r.matrixSize.isSquare?this.rowNum=this.colNum=Math.trunc(Math.random()*(r.matrixSize.max+1))||r.matrixSize.min:(this.rowNum=Math.trunc(Math.random()*(r.matrixSize.max+1))||r.matrixSize.min,this.colNum=Math.trunc(Math.random()*(r.matrixSize.max+1))||r.matrixSize.min),this.mtx=new Array(this.rowNum);for(let e=0,n;e<this.rowNum;++e)for(this.mtx[e]=[],n=0;n<this.colNum;++n){let o=Number((Math.random()*r.entries.max).toFixed(r.entries.decimals))+r.entries.min;this.setEntry(o,e+1,n+1)}}else this.rowNum=t,this.colNum=r,this.mtx=new Array(this.rowNum).fill(null),this.mtx.forEach((e,n,o)=>o[n]=new Array(r).fill(0))}static isSingleton=t=>this.isRow(t)&&this.isCol(t);static isRow=t=>t.rowNum==1;static isCol=t=>t.colNum==1;static isRectangular=t=>t.rowNum!=t.colNum;static isSquare=t=>t.rowNum==t.colNum;static isIdentity=t=>{if(!this.isSquare(t))return!1;for(let r of t.mtx)if(r.reduce((e,n)=>e+n)!=1)return!1;return!0};static isZero=t=>{for(let r of t.mtx)if(r.reduce((e,n)=>e+n)!=0)return!1;return!0};static isDiagonal=t=>{throw new Error("Has not yet been implemented!")};static isSingular=t=>{throw new Error("Has not yet been implemented!")};static isNonsingular=t=>{throw new Error("Has not yet been implemented!")};static isUpperTriangular=t=>{let r,e,n;for(r=1;r<=t.rowNum;++r)for(e=1;e<t.colNum;++e)if(n=t.getEntry(r,e),e>=r&&n==0||e<r&&n!=0)return!1;return!0};static isLowerTriangular=t=>{let r,e,n;for(r=1;r<=t.rowNum;++r)for(e=1;e<t.colNum;++e)if(n=t.getEntry(r,e),e<r&&n==0||e>=r&&n!=0)return!1;return!0};static isSymmetric=t=>{throw new Error("Has not yet been implemented!")};static isOrthogonal=t=>{throw new Error("Has not yet been implemented!")}};var x=class i{static of2x2Mtx(t){if(!i.is2x2Mtx(t))throw Error("Matrix not of size 2x2.");return t.getEntry(1,1)*t.getEntry(2,2)-t.getEntry(2,1)*t.getEntry(1,2)}static minor(t,r,e){let n=t.submatrix(r,e);return i.is2x2Mtx(n)?i.of2x2Mtx(n):i.laplaceExpansion(n,r)}static cofactor(t,r,e){return Math.pow(-1,r+e)*i.minor(t,r,e)}static laplaceExpansion(t,r){if(a.isSquare(t)){if(t.rowNum==1)return t.getEntry(1,1)}else throw new Error("Cannot use this method for non-square matrices");let e=0,n,o,s;for(let u=1;u<=t.rowNum;++u)n=t.getEntry(r,u),o=i.cofactor(t,r,u),s=n*o,e+=s,console.log(`a[${r}][${u}]=${n}; C[${r}][${u}]=${o}; a*C=${s}; partialDet=${e}`);return console.log(),e}static ruleOfSarrus(t){if(t.rowNum!=3||t.colNum!=3)throw new Error("Rule of Sarrus only works with 3x3 matrices");let r=0,e=0,n,o,s,u,m,c;for(;e<2;){for(o=0;o<3;++o){for(s=0,n=1;s<3;++s)u=s+1,m=(s+o)%3+1,c=t.getEntry(e==0?u:3-u+1,m),n*=c,console.log(`Ax[${o}][${s}]=${c}; A[${u}][${m}]=${c}; a*b*c=${n}`);e==0?r+=n:r-=n,console.log("det="+r)}++e}return console.log(),r}static is2x2Mtx(t){return t.rowNum==2&&t.colNum==2}static hasZeroDeterminant(t){}};function h(i){return i.matchAll(new RegExp(/\b[0-9]+\.?[0-9]{0,}/,"g"))}var l=class i{#t;#r;constructor(t){this.#r=t,this.#t=null}get source(){return this.#r}set source(t){this.#r=t,this.#t=null}nextNumber(){this.#t||(this.#t=h(this.#r));let t=this.#t.next();if(t.done)throw this.#t=null,new Error("NoSuchElementException");return Number(t.value[0])}nextInt(){return Math.trunc(this.nextNumber())}getAllNumbers(){return i.getAllNumbers(this.#r)}static getAllNumbers(t){return h(t).toArray().map(([r])=>Number(r))}};function w(i){return/(\bY|y)(ES|es)?\b/.test(i)}function f(i){return/(\bN|n)(O|o)?\b/.test(i)}var M=`
Elementary Row Operations`.concat(`
's' - Swap two rows`,`
'*' - Multiply row with scalar`,`
'+' - Store sum of two rows`,`
'x' - Skip section`),p=class i{static#t=null;constructor(){}swap(t,r,e){let n=t.getRow(r),o=t.getRow(e);t.setRow(n,e),t.setRow(o,r)}scalarMultiply(t,r,e){t.getRow(e).forEach((o,s)=>t.setEntry(o*r,e,s+1))}rowSum(t,r,e,n){if(r==e)throw new Error("IllegalArgumentException: rowA and rowB must not be the same");let o=t.getRow(r),s=t.getRow(e);n==r?o.forEach((u,m)=>t.setEntry(u+s[m],r,m+1)):n==e&&s.forEach((u,m)=>t.setEntry(u+o[m],e,m+1))}static swap=(...t)=>{this.#t||(this.#t=new i),this.#t.swap(...t)};static scalarMultiply=(...t)=>{this.#t||(this.#t=new i),this.#t.scalarMultiply(...t)};static rowSum=(...t)=>{this.#t||(this.#t=new i),this.#t.rowSum(...t)};static main(){let[t,r]=Array(2),e="n",n=null,o="";do{t=parseInt(prompt("Enter row for matrix: ","1")),r=parseInt(prompt("Enter column for matrix: ","1"));let s=new a(t,r);if(e=prompt("Fill matrix automatically?","y"),w(e))e=prompt("Enter fill value(s): ","1"),s.fill(...l.getAllNumbers(e));else for(let u=1,m=0,c=0;u<=t;++u)for(m=1;m<=r;++m)c=Number(prompt(`Enter [${u}][${m}] = `,"0")),s.setEntry(c,u,m);console.log(M);do switch(s.print(),e=prompt("Operation:[s|*|+|x]","x"),e){case"s":{o=prompt("row[a] <-> row[b] -- 'a b': ","1 2"),n?n.source=o:n=new l(o),s.swap(n.nextInt(),n.nextInt());break}case"*":{o=prompt("scalar[a] * row[b] => row[b] -- 'a b': ","1 2"),n?n.source=o:n=new l(o),s.scalarMultiply(n.nextInt(),n.nextNumber());break}case"+":{o=prompt("row[a] + row[b] => row[x:a|b] -- 'a b x': ","1 2 1"),n?n.source=o:n=new l(o),s.rowSum(n.nextInt(),n.nextInt(),n.nextInt());break}case"x":{f(prompt("Are you sure? ","n"))&&(e="0");break}}while(e!="x");do e=prompt("Would you like to go again? ","n");while(!w(e)&&!f(e))}while(w(e))}};a.prototype.fill=function(i,...t){let r;i instanceof Function?r=i:(t.unshift(i),r=(e,n)=>{let o=n+this.rowNum*(e-1)-1;return t[t.length-1<o?t.length-1:o]}),t.length==0&&t.push(0);for(let e=1;e<=this.rowNum;++e)for(let n=1;n<=this.colNum;++n)this.setEntry(r(e,n),e,n)};a.prototype.areInvalidPositions=function(i,t){return i<1||t<1||i>this.rowNum||t>this.colNum};a.prototype.getEntry=function(i,t){if(this.areInvalidPositions(i,t))throw new Error(`Invalid Positions: (${i},${t})`);return this.mtx[i-1][t-1]};a.prototype.setEntry=function(i,t,r){if(this.areInvalidPositions(t,r))throw new Error(`Invalid Positions: (${t},${r})`);this.mtx[t-1][r-1]=i;let e=i.toString().length;e>this.maxDigits&&(this.maxDigits=e)};a.prototype.getRow=function(i){if(this.areInvalidPositions(i,1))throw new Error("Invalid Row Number "+i);return this.mtx[i-1]};a.prototype.setRow=function(i,t){if(this.areInvalidPositions(t,1))throw new Error("Invalid Row Number");if(i.length!=this.colNum)throw new Error(`New row size (${i.length}) does not equal matrix row size (${this.rowNum}).`);this.mtx[t-1]=i};a.prototype.swap=function(...i){p.swap(this,...i)};a.prototype.scalarMultiply=function(...i){p.scalarMultiply(this,...i)};a.prototype.rowSum=function(...i){p.rowSum(this,...i)};a.prototype.toString=function(){let i=`
`,t=this.rowNum,r=this.colNum;for(let e=1,n=1;e<=t;++e){for(this.rowNum==1?i+="[ ":e==1?i+="\u250C ":e!=t?i+=`
\u2502 `:i+=`
\u2514 `,n=1;n<=r;++n)i+=(this.getEntry(e,n)??0).toString().padEnd(this.maxDigits," ")+" ";this.rowNum==1?i+="]":e==1?i+="\u2510":e!=t?i+="\u2502":e==t&&(i+="\u2518")}return i+`
`};a.prototype.toArray=function(){return JSON.parse(JSON.stringify(this.mtx))};a.prototype.print=function(){console.log(this.toString())};a.prototype.submatrix=function(i,t){let r=new a(this.rowNum-1,this.colNum-1),e,n,o,s;for(e=n=o=s=1;e<=this.rowNum;++e)if(e!=i){for(o=1,s=1;o<=this.colNum;++o)o!=t&&(r.setEntry(this.getEntry(e,o),n,s),++s);++n}return r};a.prototype.matrixOfMinors=function(){let i=new a(this.rowNum,this.colNum);for(let t=1,r;t<=this.rowNum;++t)for(r=1;r<=this.colNum;++r)i.setEntry(x.minor(this,t,r),t,r);return i};function d(i){let t="`[";for(let r=1;r<=i.rowNum;++r)t+="["+i.getRow(r)+"]"+(r+1<=i.rowNum?",":"]`");return t}var L=document.getElementById("mtx_canvas"),y=document.getElementById("matrix_body"),F=document.getElementById("row_operations"),b=document.getElementById("keyboard_presses"),J=document.getElementById("multiply_row"),O=document.getElementById("add_row_a"),Y=document.getElementById("add_to_row_b"),Z=document.getElementById("scalar_mul"),g={formCreateNewMatrix:document.getElementById("create_new_matrix"),divCanvasOps:document.getElementById("canvas_operations"),inputNewMtxRows:document.getElementById("new_mtx_rows"),inputNewMtxCols:document.getElementById("new_mtx_cols"),inputNewMtxIsRandom:document.getElementById("new_mtx_is_random"),initialize(){this.formCreateNewMatrix.addEventListener("submit",i=>{if(i.preventDefault(),!this.inputNewMtxCols.value.length||!this.inputNewMtxRows.value.length)return;let t=Number(this.inputNewMtxRows.value),r=Number(this.inputNewMtxCols.value),e=new a(t,r);console.log(this.inputNewMtxIsRandom.checked),this.inputNewMtxIsRandom.checked,this.inputNewMtxIsRandom.checked&&e.fill((n,o)=>Math.trunc(Math.random()*20)),E(e)})}};document.body.addEventListener("keypress",i=>{b.innerText=(i.ctrlKey?"Ctrl+":"")+(i.altKey?"Alt+":"")+`${i.key}`,console.log(`${i.ctrlKey} ${i.altKey} ${i.key}`)});function E(i){console.log(i);let t=d(i),r=y.getElementsByTagName("mjx-container");y.innerHTML=t,r&&(window.MathJax.typeset(),console.log("Rerendered"))}function N(){let i=new a("RANDOM",{matrixSize:{min:4,max:4,isSquare:!0},entries:{min:0,max:20,decimals:0}});E(i),g.initialize()}N();})();
